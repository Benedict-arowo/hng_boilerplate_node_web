openapi: 3.0.0
info:
    title: Blog API
    version: 1.0.0
    description: API for managing blog posts
servers:
    - url: http://localhost:3000/api/v1
paths:
    /blogs:
        get:
            summary: Get all blog posts
            parameters:
                - name: page
                  in: query
                  description: Page number
                  required: false
                  schema:
                      type: integer
                      default: 1
                - name: limit
                  in: query
                  description: Number of items per page
                  required: false
                  schema:
                      type: integer
                      default: 10
            responses:
                '200':
                    description: A list of blog posts
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    totalItems:
                                        type: integer
                                    totalPages:
                                        type: integer
                                    currentPage:
                                        type: integer
                                    blogs:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Blog'
        post:
            summary: Create a new blog post
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BlogInput'
            responses:
                '201':
                    description: Blog post created successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Blog'
    /blogs/{id}:
        get:
            summary: Get a single blog post by ID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: A single blog post
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Blog'
                '404':
                    description: Blog post not found
        put:
            summary: Update a blog post by ID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BlogInput'
            responses:
                '200':
                    description: Blog post updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Blog'
                '404':
                    description: Blog post not found
        delete:
            summary: Delete a blog post by ID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '204':
                    description: Blog post deleted successfully
                '404':
                    description: Blog post not found
components:
    schemas:
        Blog:
            type: object
            properties:
                id:
                    type: string
                authorId:
                    type: string
                title:
                    type: string
                content:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        BlogInput:
            type: object
            properties:
                authorId:
                    type: string
                title:
                    type: string
                content:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
            required:
                - authorId
                - title
                - content
